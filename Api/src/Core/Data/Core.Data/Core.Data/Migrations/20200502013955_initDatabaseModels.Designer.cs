// <auto-generated />
using Core.Data.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Core.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200502013955_initDatabaseModels")]
    partial class initDatabaseModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Domain.Entities.Concrete.Database.Campeonato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_brasileirao")
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnName("vl_ano")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tb_campeonato");
                });

            modelBuilder.Entity("Core.Domain.Entities.Concrete.Database.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_estado")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .HasColumnName("ds_uf")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("tb_estado");
                });

            modelBuilder.Entity("Core.Domain.Entities.Concrete.Database.Posicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_posicao")
                        .HasColumnType("int");

                    b.Property<int>("Derrotas")
                        .HasColumnName("vl_derrotas")
                        .HasColumnType("int");

                    b.Property<int>("Empates")
                        .HasColumnName("vl_empates")
                        .HasColumnType("int");

                    b.Property<int>("GolsContra")
                        .HasColumnName("vl_golscontra")
                        .HasColumnType("int");

                    b.Property<int>("GolsPro")
                        .HasColumnName("vl_golspro")
                        .HasColumnType("int");

                    b.Property<int>("IdCampeonato")
                        .HasColumnName("id_campeonato")
                        .HasColumnType("int");

                    b.Property<int>("IdTime")
                        .HasColumnName("id_time")
                        .HasColumnType("int");

                    b.Property<int>("Jogos")
                        .HasColumnName("vl_jogos")
                        .HasColumnType("int");

                    b.Property<int>("Pontos")
                        .HasColumnName("vl_pontos")
                        .HasColumnType("int");

                    b.Property<int>("PosicaoValue")
                        .HasColumnName("vl_posicao")
                        .HasColumnType("int");

                    b.Property<int>("Vitorias")
                        .HasColumnName("vl_vitorias")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCampeonato");

                    b.HasIndex("IdTime");

                    b.ToTable("tb_posicao");
                });

            modelBuilder.Entity("Core.Domain.Entities.Concrete.Database.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_time")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnName("id_estado")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("ds_nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("tb_time");
                });

            modelBuilder.Entity("Core.Domain.Entities.Concrete.Database.Posicao", b =>
                {
                    b.HasOne("Core.Domain.Entities.Concrete.Database.Campeonato", "Campeonato")
                        .WithMany("Posicoes")
                        .HasForeignKey("IdCampeonato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Entities.Concrete.Database.Time", "Time")
                        .WithMany("Posicoes")
                        .HasForeignKey("IdTime")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Domain.Entities.Concrete.Database.Time", b =>
                {
                    b.HasOne("Core.Domain.Entities.Concrete.Database.Estado", "Estado")
                        .WithMany("Times")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
